{"category":"HPDL1414","color":"#5fed2c","blocks":["__HPDL1414_scroll_message","__HPDL1414_fexed_message","__HPDL1414_set_delay","__HPDL1414_init HPDL1414"],"jscode":"// Block __HPDL1414_scroll_message\nvar __HPDL1414_scroll_message_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1 %2\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"scroll_message\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"scroll_message\"\n        }\n    ],\n    \"colour\": \"#5fed2c\"\n};\n\nwindow['Blockly'].Blocks['__HPDL1414_scroll_message'] = {\n    init: function() {\n        this.jsonInit(__HPDL1414_scroll_message_json);\n    }\n};\n\nwindow['Blockly'].Python['__HPDL1414_scroll_message'] = function(block) {\n    var scroll_message = Blockly.Python.valueToCode(block, 'scroll_message', Blockly.Python.ORDER_NONE);\n    return `message = str(${scroll_message})\nmessage = \"S:\" + message[:32]\ndata = [ord(c) for c in message]  # 文字列をバイト列に変換\ni2c0.addr = 0x58  # アドレスを設定\ni2c0.write_mem_list(len(data), data)  # バイト列を送信` + \"\\n\";\n};\n\n// Block __HPDL1414_fexed_message\nvar __HPDL1414_fexed_message_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1 %2\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"fixed_message\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"fixed_message\"\n        }\n    ],\n    \"colour\": \"#5fed2c\"\n};\n\nwindow['Blockly'].Blocks['__HPDL1414_fexed_message'] = {\n    init: function() {\n        this.jsonInit(__HPDL1414_fexed_message_json);\n    }\n};\n\nwindow['Blockly'].Python['__HPDL1414_fexed_message'] = function(block) {\n    var fixed_message = Blockly.Python.valueToCode(block, 'fixed_message', Blockly.Python.ORDER_NONE);\n    return `message = str(${fixed_message})\nmessage = \"F:\" + message[:32]\ndata = [ord(c) for c in message]  # 文字列をバイト列に変換\ni2c0.addr = 0x58  # アドレスを設定\ni2c0.write_mem_list(len(data), data)  # バイト列を送信` + \"\\n\";\n};\n\n// Block __HPDL1414_set_delay\nvar __HPDL1414_set_delay_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1 %2\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"scroll_delay\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"scroll_delay\"\n        }\n    ],\n    \"colour\": \"#5fed2c\"\n};\n\nwindow['Blockly'].Blocks['__HPDL1414_set_delay'] = {\n    init: function() {\n        this.jsonInit(__HPDL1414_set_delay_json);\n    }\n};\n\nwindow['Blockly'].Python['__HPDL1414_set_delay'] = function(block) {\n    var scroll_delay = Blockly.Python.valueToCode(block, 'scroll_delay', Blockly.Python.ORDER_NONE);\n    return `message = str(${scroll_delay})\nmessage = \"D:\" + message[:4]\ndata = [ord(c) for c in message]  # 文字列をバイト列に変換\ni2c0.addr = 0x58  # アドレスを設定\ni2c0.write_mem_list(len(data), data)  # バイト列を送信` + \"\\n\";\n};\n\n// Block __HPDL1414_init HPDL1414\nvar __HPDL1414_init HPDL1414_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"colour\": \"#5fed2c\"\n};\n\nwindow['Blockly'].Blocks['__HPDL1414_init HPDL1414'] = {\n    init: function() {\n        this.jsonInit(__HPDL1414_init HPDL1414_json);\n    }\n};\n\nwindow['Blockly'].Python['__HPDL1414_init HPDL1414'] = function(block) {\n        return `i2c0 = i2c_bus.easyI2C(i2c_bus.PORTA, 0x00, freq=400000)` + \"\\n\";\n};\n\n","code":{"scroll_message":["window['Blockly'].Python['__HPDL1414_scroll_message'] = function(block) {\n    var scroll_message = Blockly.Python.valueToCode(block, 'scroll_message', Blockly.Python.ORDER_NONE);\n    return `message = str(${scroll_message})\nmessage = \"S:\" + message[:32]\ndata = [ord(c) for c in message]  # 文字列をバイト列に変換\ni2c0.addr = 0x58  # アドレスを設定\ni2c0.write_mem_list(len(data), data)  # バイト列を送信` + \"\\n\";\n};\n\n","message = str(${scroll_message})\nmessage = \"S:\" + message[:32]\ndata = [ord(c) for c in message]  # 文字列をバイト列に変換\ni2c0.addr = 0x58  # アドレスを設定\ni2c0.write_mem_list(len(data), data)  # バイト列を送信"],"fexed_message":["window['Blockly'].Python['__HPDL1414_fexed_message'] = function(block) {\n    var fixed_message = Blockly.Python.valueToCode(block, 'fixed_message', Blockly.Python.ORDER_NONE);\n    return `message = str(${fixed_message})\nmessage = \"F:\" + message[:32]\ndata = [ord(c) for c in message]  # 文字列をバイト列に変換\ni2c0.addr = 0x58  # アドレスを設定\ni2c0.write_mem_list(len(data), data)  # バイト列を送信` + \"\\n\";\n};\n\n","message = str(${fixed_message})\nmessage = \"F:\" + message[:32]\ndata = [ord(c) for c in message]  # 文字列をバイト列に変換\ni2c0.addr = 0x58  # アドレスを設定\ni2c0.write_mem_list(len(data), data)  # バイト列を送信"],"set_delay":["window['Blockly'].Python['__HPDL1414_set_delay'] = function(block) {\n    var scroll_delay = Blockly.Python.valueToCode(block, 'scroll_delay', Blockly.Python.ORDER_NONE);\n    return `message = str(${scroll_delay})\nmessage = \"D:\" + message[:4]\ndata = [ord(c) for c in message]  # 文字列をバイト列に変換\ni2c0.addr = 0x58  # アドレスを設定\ni2c0.write_mem_list(len(data), data)  # バイト列を送信` + \"\\n\";\n};\n\n","message = str(${scroll_delay})\nmessage = \"D:\" + message[:4]\ndata = [ord(c) for c in message]  # 文字列をバイト列に変換\ni2c0.addr = 0x58  # アドレスを設定\ni2c0.write_mem_list(len(data), data)  # バイト列を送信"],"init HPDL1414":["window['Blockly'].Python['__HPDL1414_init HPDL1414'] = function(block) {\n        return `i2c0 = i2c_bus.easyI2C(i2c_bus.PORTA, 0x00, freq=400000)` + \"\\n\";\n};\n\n","i2c0 = i2c_bus.easyI2C(i2c_bus.PORTA, 0x00, freq=400000)"]}}